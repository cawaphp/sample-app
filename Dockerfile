FROM debian:jessie

# init
RUN apt-get update

# install persistent / runtime deps
RUN apt-get install -y ca-certificates curl librecode0 libsqlite3-0 libxml2 dialog wget supervisor expect vim locales patch git --no-install-recommends

# locale gen
RUN cat /usr/share/i18n/SUPPORTED > /usr/sbin/locale-gen
RUN /usr/sbin/locale-gen

# dotdeb package
RUN wget https://www.dotdeb.org/dotdeb.gpg
RUN apt-key add dotdeb.gpg
RUN rm dotdeb.gpg
RUN echo "deb http://packages.dotdeb.org jessie all" > /etc/apt/sources.list.d/dotdeb.list
RUN echo "deb-src http://packages.dotdeb.org jessie all" >> /etc/apt/sources.list.d/dotdeb.list
RUN apt-get update

# install phpize deps
RUN apt-get install -y autoconf file g++ gcc libc-dev make pkg-config re2c --no-install-recommends

# install php + extensions
RUN apt-get install -y php7.0 php7.0-common php7.0-curl php7.0-dbg php7.0-dev php7.0-fpm php7.0-gd php7.0-imap php7.0-intl php7.0-json php7.0-ldap php7.0-modules-source php7.0-mysql php7.0-opcache php7.0-phpdbg php7.0-readline

# phpfpm config file
RUN sed -i.bak 's/^listen = .*/listen = [::]:9000/' /etc/php/7.0/fpm/pool.d/www.conf > /dev/null
RUN sed -i.bak 's/^;catch_workers_output = yes/catch_workers_output = yes/' /etc/php/7.0/fpm/pool.d/www.conf > /dev/null
RUN sed -i.bak 's/^;clear_env = no/clear_env = no/' /etc/php/7.0/fpm/pool.d/www.conf > /dev/null
RUN sed -i.bak 's#^;access.log =.*#access.log = /var/log/php/access.log#' /etc/php/7.0/fpm/pool.d/www.conf > /dev/null
RUN sed -i.bak 's#^error_log =.*#error_log = /var/log/php/error.log#' /etc/php/7.0/fpm/php-fpm.conf > /dev/null
RUN mkdir /run/php/ /var/log/php

# install nginx
RUN curl http://nginx.org/keys/nginx_signing.key | apt-key add -
RUN echo "deb http://nginx.org/packages/debian/ jessie nginx" > /etc/apt/sources.list.d/nginx.list
RUN echo "deb-src http://nginx.org/packages/debian/ jessie nginx" >> /etc/apt/sources.list.d/nginx.list
RUN apt-get install -y nginx-extras ssl-cert

# nginx config file
RUN echo 'server {\n\
  listen 80 default_server;\n\
  listen 443 ssl default_server;\n\
  # Self signed certs generated by the ssl-cert package\n\
  # Don't use them in a production server!\n\
  include snippets/snakeoil.conf;\n\
  \n\
  root /var/www/default/public;\n\
  \n\
  index index.html index.htm index.php;\n\
  \n\
  server_name _;\n\
  \n\
  location / {\n\
    try_files $uri /index.php?$query_string;\n\
  }\n\
  \n\
  location ~ \.php$ {\n\
    include snippets/fastcgi-php.conf;\n\
     fastcgi_pass 127.0.0.1:9000;\n\
  }\n\
  \n\
}' > /etc/nginx/sites-enabled/default

RUN sed -i.bak 's|# gzip_types.*;| gzip_types text/plain text/css\n\
               application/x-javascript text/javascript\n\
               application/json application/problem+json\n\
               text/xml application/xml application/xml+rss application/xhtml+xml application/atom+xml\n\
               application/ecmascript\n\
               text/x-component\n\
               application/vnd.ms-fontobject application/x-font-ttf font/opentype\n\
               image/svg+xml;|' /etc/nginx/nginx.conf

RUN sed -i.bak 's|# gzip_types.*;|gzip_types text/plain text/css\n\
               application/x-javascript text/javascript\n\
               application/json application/problem+json\n\
               text/xml application/xml application/xml+rss application/xhtml+xml application/atom+xml\n\
               application/ecmascript\n\
               text/x-component\n\
               application/vnd.ms-fontobject application/x-font-ttf font/opentype\n\
               image/svg+xml;|' /etc/nginx/nginx.conf
RUN sed -i.bak "s|access_log.*|log_format extended '[Vhost: \$http_host] [Stamp: \$time_iso8601] '\n\
               '[Ip: \$remote_addr] [Duration: \$request_time] [ResponseCode: \$status] '\n\
               '[File: \$document_root\$uri] [Method: \$request_method] [Url: \$request_uri] [Lenght: \$bytes_sent] '\n\
               '[UserAgent: \$http_user_agent] [Referer: \$http_referer]';\n\
        access_log /var/log/nginx/access.log extended;|" /etc/nginx/nginx.conf
RUN sed -i '1s/^/daemon off;\n/' /etc/nginx/nginx.conf

# supervisord
RUN echo '[program:php-fpm]\n\
command=php-fpm7.0 --nodaemonize --pid / --fpm-config /etc/php/7.0/fpm/php-fpm.conf\n\
numprocs=1\n\
autostart=true\n\
redirect_stderr=true\n\
autorestart=true' > /etc/supervisor/conf.d/supervisord-php-fpm.conf

RUN echo '[program:nginx]\n\
command=nginx\n\
numprocs=1\n\
autostart=true\n\
redirect_stderr=true\n\
autorestart=true' > /etc/supervisor/conf.d/supervisord-nginx.conf

# php tools
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=bin --filename=composer
RUN curl https://phar.phpunit.de/phpunit.phar > /bin/phpunit
RUN chmod +x /bin/phpunit

RUN curl -sS http://get.sensiolabs.org/php-cs-fixer.phar > /bin/php-cs-fixer
RUN chmod +x /bin/php-cs-fixer

RUN curl -sS https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar > /bin/phpcs
RUN chmod +x /bin/phpcs

RUN curl -sS https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar > /bin/phpcbf
RUN chmod +x /bin/phpcbf

# pear + pecl
RUN echo '#!/usr/bin/expect\n\
spawn wget -O /tmp/go-pear.phar http://pear.php.net/go-pear.phar\n\
expect eof\n\
\n\
spawn php /tmp/go-pear.phar\n\
\n\
expect "1-12, 'all' or Enter to continue:"\n\
send "1\r"\n\
expect "Installation base"\n\
send "\r"\n\
expect "1-12, 'all' or Enter to continue:"\n\
send "\r"\n\
expect "Would you like to alter php.ini"\n\
send "n\r"\n\
expect "Press Enter to continue"\n\
send "\r"\n\
\n\
expect eof\n\
\n\
spawn rm /tmp/go-pear.phar\n\
' > install-pear.sh
RUN expect install-pear.sh
RUN rm install-pear.sh

# pecl extension
RUN pecl install xdebug-beta
RUN echo '; configuration for php xdebug module\n\
; priority=10\n\
zend_extension=/usr/lib/php/20151012/xdebug.so\n\
xdebug.remote_enable=1\n\
xdebug.remote_host=127.0.0.1\n\
xdebug.remote_port=9007\n\
xdebug.profiler_enable_trigger = 1\n\
xdebug.profiler_output_dir = /var/www/profile\n\
xdebug.profiler_output_name = profile.%u\n\
' > /etc/php/mods-available/xdebug.ini
RUN ln -s /etc/php/mods-available/xdebug.ini /etc/php/7.0/cli/conf.d/10-xdebug.ini
RUN ln -s /etc/php/mods-available/xdebug.ini /etc/php/7.0/fpm/conf.d/10-xdebug.ini

RUN printf "\n" | pecl install apcu
RUN echo '; configuration for php apcu module\n\
; priority=10\n\
extension=apcu.so\n\
' > /etc/php/mods-available/apcu.ini
RUN ln -s /etc/php/mods-available/apcu.ini /etc/php/7.0/cli/conf.d/10-apcu.ini
RUN ln -s /etc/php/mods-available/apcu.ini /etc/php/7.0/fpm/conf.d/10-apcu.ini

# manual extension install
RUN cd /tmp
RUN git clone https://github.com/phpredis/phpredis.git
RUN cd phpredis
RUN git checkout php7
RUN phpize
RUN ./configure
RUN make && make install
RUN echo '; configuration for php redis module\n\
; priority=10\n\
extension=redis.so\n\
' > /etc/php/mods-available/redis.ini
RUN ln -s /etc/php/mods-available/redis.ini /etc/php/7.0/cli/conf.d/10-redis.ini
RUN ln -s /etc/php/mods-available/redis.ini /etc/php/7.0/fpm/conf.d/10-redis.ini


# start
EXPOSE 9000 80 443

# CMD bash
CMD /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf
